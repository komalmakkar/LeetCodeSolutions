/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists==null || lists.length ==0){//!isValid(lists)){
            return null; 
        }
        
        PriorityQueue<ListNode> pQueue = new PriorityQueue<ListNode>(lists.length,  new Comparator<ListNode>(){
            @Override
            public int compare(ListNode n1, ListNode n2){
                if(n1.val < n2.val){
                    return -1;
                } 
                if(n1.val == n2.val){
                    return 0;
                }
                return 1;
            }
        });
        
        ListNode headDummy = new ListNode(0);
        ListNode tail = headDummy;
        
        for (ListNode node : lists){
            if(node!=null){
                pQueue.add(node); 
            }
        }
        
        while (!pQueue.isEmpty()){
            tail.next = pQueue.poll();
            tail = tail.next;
            if(tail.next != null){
                pQueue.add(tail.next);
            }
        }
        return headDummy.next;
    }
}
