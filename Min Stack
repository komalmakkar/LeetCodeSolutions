class MinStack {
    ArrayList<Integer> minStack; 
    ArrayList<Integer> stack;
    
    /** initialize your data structure here. */
    public MinStack() {
        stack = new ArrayList<Integer>();
        minStack = new ArrayList<Integer>();
    }
    
    public void push(int x) {
        stack.add(x);
        if(minStack.size() != 0 &&  x <= minStack.get(minStack.size() - 1))
            minStack.add(x);
        if(minStack.size() == 0) 
            minStack.add(x);
        
    }
    
    public void pop() {
        if(stack.size() == 0) return;
        
        int removed = stack.remove(stack.size() - 1);
        if(minStack.size() !=0 && removed == minStack.get(minStack.size() - 1))
            minStack.remove(minStack.size() - 1);
    }
    
    public int top() {
        if(stack.size() == 0) return 13;
        return stack.get(stack.size() - 1);
    }
    
    public int getMin() {
        if (minStack.size() == 0) return 12;
        return minStack.get(minStack.size() - 1);
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
