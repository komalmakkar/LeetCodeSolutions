class Solution {
    public int maximalSquare(char[][] matrix) {
        if(matrix == null || matrix.length == 0 || matrix[0].length == 0) return 0;// || matrix.length == 0 || matrix[0].length) return 0;
        int dp[][] = new int[matrix.length][matrix[0].length];
        int max = 0;
        for (int i = 0 ; i < matrix.length; i++){
            dp[i][0] = matrix[i][0] - '0';
            if(dp[i][0] == 1)
                max = 1;
        }
        for (int i = 0 ; i < matrix[0].length; i++){
            dp[0][i] = matrix[0][i] - '0';
            if(dp[0][i] == 1)
                max = 1;
        }
        for (int i = 1 ; i < matrix.length; i++){
            for (int j = 1 ; j < matrix[0].length ; j++){
                if(matrix[i][j] == '1'){
                    dp[i][j] = min (dp[i-1][j-1], min (dp[i-1][j], dp[i][j-1])) + 1; 
                    max = max > dp[i][j] ? max : dp[i][j];
                } else dp[i][j] = 0;
                System.out.print(dp[i][j] + " ");
            }
            System.out.println("");
        }
        return max* max;
    }
    public int min (int a, int b){
        return a < b?a : b; 
    }
}
