import java.util.*; 
class Solution {
    class Trie{
        final static int ALPHA_SIZE = 26;
        TrieNode root;// = new TrieNode();
        Trie(){
            root = new TrieNode();
        }
        
        class TrieNode{
            TrieNode child[] = new TrieNode[ALPHA_SIZE];    
            boolean eow;
            TrieNode (){
                eow = false; 
                for(int i = 0 ; i < ALPHA_SIZE; i++){
                    child[i] = null;
                }
            }
        }
        
        void insert(String s){
            TrieNode iterator = root;
            int i = 0;
            while(i < s.length()){
                int pos = s.charAt(i) - 'a';
                if(iterator.child[pos] != null){
                    iterator = iterator.child[pos];
                } else{
                    iterator.child[pos] = new TrieNode();
                    iterator = iterator.child[pos];
                }
                i++;
            }
            iterator.eow = true; 
        }
        
        int find (String s){
            int i = 0;
            TrieNode iterator = root; 
            while(i< s.length()){
              int pos = s.charAt(i) - 'a';
              if(iterator.child[pos]!= null && iterator.child[pos].eow){
                    return i+1; 
              } else {
                  if(iterator.child[pos]!= null){
                      iterator = iterator.child[pos];
                  } else {
                      return 0; 
                  }
              }
                i++;
            }    
            return 0;
        }
        String replace(String s){
            int len = find(s);
            String replaced = new String() ; 
            
            if(len == 0){
                return s;
            } else{
                for(int i = 0 ; i< len ; i++){
                    replaced = replaced + s.charAt(i);
                }
            }
           return replaced; 
        }
    }
    
    public String replaceWords(List<String> dict, String sentence) {
        ArrayList<String> words = new ArrayList<String>();    
        StringTokenizer st1 =  new StringTokenizer(sentence,  " "); 
        for (int i = 1; st1.hasMoreTokens(); i++){
          words.add(st1.nextToken());
        }
        Trie trie = new Trie();
        for(int i = 0 ; i < dict.size(); i++){
            trie.insert(dict.get(i));    
        }
        for(int i = 0 ; i < words.size(); i++){
            words.set(i, trie.replace(words.get(i)));    
        }
        String s = new String();
        for(int i = 0 ; i< words.size(); i++){
            if(i == words.size()-1){
                s = s + words.get(i);
            } else{
                s = s + words.get(i) + " ";
            }
        }
        return s;
    }
}
